{
  
    
        "post0": {
            "title": "Methods in Java",
            "content": "What is a Method? . Function or sub-code that is associated with a class in object-oriented programming | Can contain a set of codes that performs an action | It can also take an input and return an output based on the user | . Creating a Method . A method is created within a class | It is defined with the name, followed by () | An example of a Java pre-defined method is System.out.println() | . Example Code . public class Main { static void ExampleMethod(){ // ExampleMethod is the name of the method; static means that the method belongs to the Main class and not an object System.out.println(&quot;Hi!&quot;); } } . Calling a Method . With Java, you can call a method by writing the method&#39;s name and then having (); after it | . Example Code . public class Main { static void ExampleMethod() { System.out.println(&quot;Hello AP CSA!&quot;); } public static void main(String[] args) { ExampleMethod(); } } // Outputs &quot;I just got executed!&quot; . Hack 1 . Fill in the missing code | . static void myMethod() { System.out.println(&quot;Code is executed!&quot;); } public static void main(String[] args) { __________________ } . Hack 2 . Describe what the method does | . public string myMethod(String s,inti){ String r =&quot;&quot;; for(int j=0; j&lt; s.length(); j++){ r+=(char)(s.charAt(j)+i); } return r; } . Additional Resources . Videos: . https://www.youtube.com/watch?v=_rsKeFaGx48&amp;ab_channel=Udacity | https://www.youtube.com/watch?v=67ci2FvaY6o&amp;ab_channel=DonWoodlock | . More Practice Questions: . https://www.khanacademy.org/computing/computer-programming/programming | .",
            "url": "https://bgt072105.github.io/CSA-tri1-teamrepo/jupyter/2022/09/19/Methods.html",
            "relUrl": "/jupyter/2022/09/19/Methods.html",
            "date": " • Sep 19, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "GUI Notebook",
            "content": "import java.awt.*; import java.awt.event.*; import javax.swing.*; import java.util.Timer; import java.util.TimerTask; // Graphical-User-Interface for Desktop in Java using Java Swing. public class MenuJFrame extends JFrame implements ActionListener { private JFrame frame; private JMenuBar menubar; private JMenu menu; private JLabel message = new JLabel(&quot;Click on Menu to select an action.&quot;); public final String[] MENUS = { // 1D Array of Menu Choices &quot;Mean and Median&quot;, &quot;Celsius to Fahrenheit&quot;, &quot;Potential Energy Calculator&quot;, }; // Statics to assist with timer and messaging, single copy (no instance) private static int delay = 20; private static int step = 1; private static String hashes = &quot;&quot;; // Constructor enables the Frame instance, the object &quot;this.frame&quot; public MenuJFrame(String title) { // Initializing Key Objects frame = new JFrame(title); menubar = new JMenuBar(); menu = new JMenu(&quot;Menu&quot;); // Initializing Menu objects and adding actions for (String mx : MENUS) { JMenuItem m = new JMenuItem(mx); m.addActionListener(this); menu.add(m); } // Adding / Connecting Objects menubar.add(menu); frame.setJMenuBar(menubar); frame.add(message); // Sets JFrame close operation to Class variable JFrame.EXIT_ON_CLOSE frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); // set the size of window based on objects frame.setSize(300,200); // makes the frame object visible according to properties previously set frame.setVisible(true); // flow of control shifts to frame object } // event from user selecting a menu option public void actionPerformed(ActionEvent e) { // local variable to ActinEvent String selection = e.getActionCommand(); // menu selection String msg; // local variable to create response from action final String[] COLORS = {&quot;Red&quot;, &quot;Green&quot;, &quot;Blue&quot;}; // add more colors here final String start_msg = &quot;&lt;html&gt;&quot;; // html building final String end_msg = &quot;&lt;/html&gt;&quot;; final String hash = &quot;#&quot;; // run code based on the menuItem that was selected if ( selection.equals(MENUS[0]) ) { action1(start_msg, end_msg); } else if ( selection.equals(MENUS[1]) ) { action2(start_msg, end_msg); } else { action3(start_msg, end_msg); } } public void action2(String start_msg, String end_msg) { String msg; int celsius1 = 60; double fahrenheit1 = (celsius1*1.8)+ 32; msg = start_msg; msg += &quot;The celsius temperature in fahrenheit is &quot; + fahrenheit1+&quot;&quot;; msg += end_msg; message.setText(msg);} public void action3(String start_msg, String end_msg) { String msg; int height1 = 5; int gravity1= 10; int mass1 = 20; double potentialenergy = (mass1*height1*gravity1); msg = start_msg; msg += &quot;The height of the object is &quot; +height1+&quot;.&lt;br&gt; The mass of the object is &quot;+mass1+&quot;.&lt;br&gt; The gravity constant is about &quot;+gravity1+&quot;.&lt;br&gt; The potential energy is &quot;+potentialenergy+&quot;&quot;; msg += end_msg; message.setText(msg);} public void action1(String start_msg, String end_msg) { String msg; int data1 = 1; int data2 = 2; int data3 = 3; double mean = (double) (data1 + data2 + data3) / 3; int median = data2; msg = start_msg; msg += &quot;The data is &quot; + data1 + &quot;, &quot; + data2 + &quot;, &quot; + data3 + &quot;.&lt;br&gt;The mean is &quot; + mean + &quot;. The median is &quot; + median + &quot;.&quot;; msg += end_msg; message.setText(msg); } // Driver turn over control the GUI public static void main(String[] args) { // Activates an instance of MenuJFrame class, which makes a JFrame object new MenuJFrame(&quot;Menu&quot;); } } MenuJFrame.main(null); .",
            "url": "https://bgt072105.github.io/CSA-tri1-teamrepo/2022/09/19/GUImenu.html",
            "relUrl": "/2022/09/19/GUImenu.html",
            "date": " • Sep 19, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://bgt072105.github.io/CSA-tri1-teamrepo/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://bgt072105.github.io/CSA-tri1-teamrepo/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}